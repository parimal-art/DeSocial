type NotificationType = variant {
  Like;
  Comment;
  Follow;
  Repost;
  Message;
};

type UserProfile = record {
  user_principal : principal;
  name : text;
  bio : text;
  profile_image : text;
  cover_image : text;
  followers : vec principal;
  following : vec principal;
  created_at : nat64;
};

type Comment = record {
  comment_id : nat64;
  author : principal;
  content : text;
  created_at : nat64;
};

type Post = record {
  post_id : nat64;
  author : principal;
  content : text;
  image : opt text;
  video : opt text;
  created_at : nat64;
  likes : vec principal;
  comments : vec Comment;
  reposted_by : opt principal;
  original_post_id : opt nat64;
};

type Notification = record {
  notification_id : nat64;
  sender : principal;
  receiver : principal;
  notification_type : NotificationType;
  message : text;
  created_at : nat64;
  read : bool;
};

type Message = record {
  id : nat64;
  from : principal;
  to : principal;
  content : text;
  created_at : nat64;
  seen : bool;
};

service : {
  // --- User Management ---
  register_user : (text, text, text, text) -> (variant { Ok : UserProfile; Err : text });
  get_user : (principal) -> (opt UserProfile) query;
  get_current_user : () -> (opt UserProfile) query;
  update_profile : (text, text, text, text) -> (variant { Ok : UserProfile; Err : text });

  // --- Posts ---
  create_post : (text, opt text, opt text) -> (variant { Ok : Post; Err : text });
  get_all_posts : () -> (vec Post) query;
  get_user_posts : (principal) -> (vec Post) query;
  like_post : (nat64) -> (variant { Ok : Post; Err : text });
  comment_post : (nat64, text) -> (variant { Ok : Comment; Err : text });
  repost_post : (nat64) -> (variant { Ok : Post; Err : text });
  edit_post : (nat64, text, opt text, opt text) -> (variant { Ok : Post; Err : text });
  delete_post : (nat64) -> (variant { Ok : text; Err : text });

  // --- Follow System ---
  follow_user : (principal) -> (variant { Ok : text; Err : text });
  unfollow_user : (principal) -> (variant { Ok : text; Err : text });
  is_following : (principal) -> (bool) query;
  get_followers : (principal) -> (vec principal) query;
  get_following : (principal) -> (vec principal) query;

  // --- Notifications ---
  get_notifications : () -> (vec Notification) query;
  mark_notification_read : (nat64) -> (variant { Ok : text; Err : text });

  // --- Explore / Feed ---
  get_all_users : () -> (vec UserProfile) query;
  search_users : (text) -> (vec UserProfile) query;
  get_feed : () -> (vec Post) query;

  // --- Messenger ---
  send_message : (principal, text) -> (variant { Ok : Message; Err : text });
  get_conversation : (principal) -> (vec Message) query;
  mark_seen : (principal, nat64) -> (variant { Ok : text; Err : text });
  get_inbox : () -> (vec principal) query;
}
